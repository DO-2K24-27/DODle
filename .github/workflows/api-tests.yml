name: API Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'api/**'
      - '.github/workflows/api-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'api/**'
      - '.github/workflows/api-tests.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/api

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod download

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: ./api

    - name: Run tests
      run: go test -v ./...

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push image
      uses: int128/kaniko-action@v1
      with:
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          sha-${{ github.sha }}
          ${{ github.ref_name }}
          latest
        cache: true
        cache-repo: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/cache
        context: ./api
        dockerfile: ./api/Dockerfile

    - name: Scan image for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH' 